<head>
<title>
Youngmin Park
</title>
<link rel="stylesheet" type="text/css" href="http://pitt.edu/~yop6/style.css">
<script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>
<link rel="icon" type="image/png" href="http://pitt.edu/~yop6/myfavicon.ico">

<script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>
<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>


</head>

<body>
<!-- BEGIN ANALYTICS -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-50873775-1', 'pitt.edu');
  ga('send', 'pageview');

</script>
<!-- END ANALYTICS -->

<!-- BEGIN MENU -->
<div id='cssmenu'>
<script>$("#cssmenu").load("./menu.htm");</script>
</div>
<!-- END MENU -->

<div id="main">





<!-- BEGIN SUBMAIN -->
<div id="submain">

<center><h3>Code</h3><br /></center>
<!--Some rudimentary code, which some might find useful. Warning: these scripts were not written with efficiency in mind!</center>-->
<ul>
<li>Figure code for my papers are listed <b><a href="http://pitt.edu/~yop6/research.htm">here</a></b>.
</li>

<li><a href='https://github.com/youngmp/hobby_coding/blob/master/research_tools/euler.py'><b>Forward Euler method</b></a> (Python + numpy): numerically integrate ordinary differential equations (ODE) of the form<br /><br />

<center>$\frac{dx}{dt} = f(x,t)$,</center><br />

where $f: \mathbb{R}^n \times \mathbb{R} \rightarrow \mathbb{R}^n$ and $x: \mathbb{R} \rightarrow \mathbb{R}^n$.

</li>
<li><a href="https://github.com/youngmp/hobby_coding/blob/master/research_tools/langevin_1D.py"><b>Langevin equation solver</b></a> (Python + numpy): numerically integrate scalar stochastic differential equations (SDE) of the form<br /><br />

<center>$dX = A(X,t)dt + B(X,t) dW(t)$,</center><br />

where $A,B:\mathbb{R} \times \mathbb{R} \rightarrow \mathbb{R}$. The code uses the numerical scheme,<br /><br />

<center>$X(n+1) = X(n) + h A(X(n),t_n) + B(X(n),t_n) \sqrt{h} \hat N(0,1)$,</center><br />

(Ermentrout and Terman 2010) and also solves integrate-and-fire type models. This code has no UI and depends on numpy and matplotlib.</li>
<br />
<li><a href="https://github.com/youngmp/hobby_coding/blob/master/pygame/conway.py"><b>Conway's game of life</b></a> (Python + pygame,numpy). Click and drag to add initial conditions, then press the green rectangle to start. Click the yellow rectangle to pause. Color scheme inspired by my advisor: white = current, red = state at previous generation, green = state at generation before that, blue = state at generation before that.</li>
<br />
<li><a href="https://github.com/youngmp/hobby_coding/blob/master/research_tools/fourier_approx.py"><b>Fourier Approximation</b></a> (Python + numpy,scipy). Define/load data. The routine will determine the largest $n$ coefficients and its corresponding frequencies. I'll later add the option to compute the Fourier series to some $x\%$ accuracy.
</li>
</ul>



</div>
<!-- END SUB MAIN -->



</div>
<!-- END MAIN BODY -->






</body>